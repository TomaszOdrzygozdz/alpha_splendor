# Parameters for DeterministicMCTSAgent:
# ==============================================================================
DeterministicMCTSAgent.avoid_loops = True
DeterministicMCTSAgent.gamma = 0.99
DeterministicMCTSAgent.n_passes = 10
DeterministicMCTSAgent.value_accumulator_class = \
    @alpacka.agents.deterministic_mcts.ScalarValueAccumulator
DeterministicMCTSAgent.value_traits_class = \
    @alpacka.agents.deterministic_mcts.ScalarValueTraits

# Parameters for KerasNetwork:
# ==============================================================================
KerasNetwork.loss = 'mean_squared_error'
KerasNetwork.loss_weights = None
KerasNetwork.metrics = ['mae', 'mse']
KerasNetwork.model_fn = \
    @own_testing.modified_cartpole.modified_cartpole_env.multi_input_network
KerasNetwork.optimizer = 'adam'
KerasNetwork.train_callbacks = None
KerasNetwork.weight_decay = 0.0

# Parameters for LocalBatchStepper:
# ==============================================================================
# None.

# Parameters for multi_input_network:
# ==============================================================================
multi_input_network.first_hidden_layer = 20
multi_input_network.output_activation = None
multi_input_network.output_zero_init = True
multi_input_network.second_hidden_layer = 20

# Parameters for MultiObservationCartpole:
# ==============================================================================
MultiObservationCartpole.reward_scale = 1.0
MultiObservationCartpole.solved_at = 500

# Parameters for Runner:
# ==============================================================================
Runner.agent_class = @alpacka.agents.DeterministicMCTSAgent
Runner.batch_stepper_class = @alpacka.batch_steppers.LocalBatchStepper
Runner.env_class = \
    @own_testing.modified_cartpole.modified_cartpole_env.MultiObservationCartpole
Runner.env_kwargs = None
Runner.episode_time_limit = 500
Runner.n_envs = 1
Runner.n_epochs = 1000
Runner.n_precollect_epochs = 100
Runner.network_class = @alpacka.networks.KerasNetwork
Runner.trainer_class = @alpacka.trainers.SupervisedTrainer

# Parameters for ScalarValueAccumulator:
# ==============================================================================
# None.

# Parameters for ScalarValueTraits:
# ==============================================================================
ScalarValueTraits.dead_end_value = -2.0

# Parameters for SupervisedTrainer:
# ==============================================================================
SupervisedTrainer.batch_size = 32
SupervisedTrainer.n_steps_per_epoch = 13
SupervisedTrainer.replay_buffer_capacity = 500000
SupervisedTrainer.replay_buffer_sampling_hierarchy = ['solved']
SupervisedTrainer.target = @alpacka.trainers.supervised.target_value

# Parameters for target_value:
# ==============================================================================
# None.
