# Parameters for CartPole:
# ==============================================================================
CartPole.reward_scale = 1.0
CartPole.solved_at = 150

# Parameters for KerasNetwork:
# ==============================================================================
KerasNetwork.loss = ('mean_squared_error', 'categorical_crossentropy')
KerasNetwork.loss_weights = [1.0, 10.0]
KerasNetwork.metrics = [['mae', 'mse'], ['categorical_crossentropy']]
KerasNetwork.model_fn = @alpacka.networks.keras.mlp
KerasNetwork.optimizer = 'adam'
KerasNetwork.train_callbacks = None
KerasNetwork.weight_decay = 0.0

# Parameters for LocalBatchStepper:
# ==============================================================================
# None.

# Parameters for mlp:
# ==============================================================================
mlp.activation = 'relu'
mlp.hidden_sizes = (64,)
mlp.output_activation = (None, 'softmax')
mlp.output_zero_init = True

# Parameters for puct_exploration_bonus:
# ==============================================================================
# None.

# Parameters for QualityNetworkNewLeafRater:
# ==============================================================================
QualityNetworkNewLeafRater.use_policy = True

# Parameters for Runner:
# ==============================================================================
Runner.agent_class = @alpacka.agents.StochasticMCTSAgent
Runner.batch_stepper_class = @alpacka.batch_steppers.LocalBatchStepper
Runner.env_class = @alpacka.envs.CartPole
Runner.env_kwargs = None
Runner.episode_time_limit = 500
Runner.n_envs = 1
Runner.n_epochs = None
Runner.n_precollect_epochs = 100
Runner.network_class = @alpacka.networks.KerasNetwork
Runner.trainer_class = @alpacka.trainers.SupervisedTrainer

# Parameters for StochasticMCTSAgent:
# ==============================================================================
StochasticMCTSAgent.action_selection_mode = 'count'
StochasticMCTSAgent.discount = 0.99
StochasticMCTSAgent.exploration_bonus_fn = \
    @alpacka.agents.stochastic_mcts.puct_exploration_bonus
StochasticMCTSAgent.exploration_weight = 10.0
StochasticMCTSAgent.n_passes = 10
StochasticMCTSAgent.new_leaf_rater_class = \
    @alpacka.agents.stochastic_mcts.QualityNetworkNewLeafRater
StochasticMCTSAgent.sampling_temperature = 0.3

# Parameters for SupervisedTrainer:
# ==============================================================================
SupervisedTrainer.batch_size = 64
SupervisedTrainer.n_steps_per_epoch = 100
SupervisedTrainer.replay_buffer_capacity = 10000
SupervisedTrainer.replay_buffer_sampling_hierarchy = ['solved']
SupervisedTrainer.target = \
    (@alpacka.trainers.supervised.target_qualities,
     @alpacka.trainers.supervised.target_action_histogram_smooth)

# Parameters for target_action_histogram_smooth:
# ==============================================================================
# None.

# Parameters for target_qualities:
# ==============================================================================
# None.
